# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/opensportmanagement

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    
    steps:
      - checkout

      # Modify some configuration
      - run:
          command: |
            sed -i "s/key-store: \/home\/romainz\/opensportmanagement\/cert\/keystore.p12/key-store: $KEY_STORE_PATH/g" src/main/resources/application.yml
            sed -i "s/key-alias: opensportmanagement/key-alias: tomcat/g" src/main/resources/application.yml
            sed -i "s/key-store-password: password/key-store-password: $KEY_STORE_PASS/g" src/main/resources/application.yml
            sed -i "s/https:\/\/127.0.0.1:4200/https:\/\/$ALLOWED_HOST/g" src/main/resources/application.yml
            sed -i "s/url: jdbc:postgresql:\/\/localhost:15435\/open/url: jdbc:postgresql:\/\/localhost:$DOCKER_POSTGRES_PORT\/$DOCKER_POSTGRES_DB/g" src/main/resources/application.yml
            sed -i "s/password: open/password: $DOCKER_POSTGRES_PASSWORD/g" src/main/resources/application.yml
            sed -i "s/username: <your_mail@gmail.com>/username: $MAIL_USERNAME/g" src/main/resources/application.yml
            sed -i "s/password: <your_mail_password>/password: $MAIL_PASSWORD/g" src/main/resources/application.yml
            sed -i "s/enabled: false/enabled: $ENABLED/g" src/main/resources/application.yml

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
            command: |
              ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
        
      # run tests!
      - run:
            command: |
              ./gradlew test

      # Build the JAR
      - run:
            command: |
              ./gradlew bootJar

      - store_artifacts:
          path: build/libs/opensportmanagement-1.0-SNAPSHOT.jar

      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
              - build

  deploy:
      machine: true
      working_directory: ~/opensportmanagement
      steps:
        - restore_cache:
            key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
        - run:
            name: Copy jar over SSH
            command: |
              scp -r build/libs/opensportmanagement-1.0-SNAPSHOT.jar $SSH_USER@$SSH_HOST:~/opensportmanagement/opensportmanagement.jar
        - run:
            name: Stop previous spring screen if it exists
            command: |
              ssh $SSH_USER@$SSH_HOST "if screen -list | grep -q spring; then screen -S spring -X quit; fi"
        - run:
            name: Execution
            command: |
              ssh $SSH_USER@$SSH_HOST "screen -dmS spring java -jar ~/opensportmanagement/opensportmanagement.jar"
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master