buildscript {
    ext.kotlin_version = '1.2.41'
    ext.spring_boot_version = '2.0.1.RELEASE'
    ext.snippetsDir = file('build/generated-snippets')

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.2.41"
    id "org.springframework.boot" version "2.0.1.RELEASE"
    id "io.spring.dependency-management" version "1.0.5.RELEASE"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.2.41"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.2.41"
    id "org.asciidoctor.convert" version "1.5.3"
}

group 'com.zcorp'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

configurations {
    ktlint
}

dependencies {
    // Spring framework
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-starter-security:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-starter-data-rest:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-starter-batch:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-starter-mail:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-devtools"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // JWT
    implementation("io.jsonwebtoken:jjwt:0.9.0")

    // Jackson Dependencies
    implementation "com.fasterxml.jackson.core:jackson-annotations"
    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    runtime "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.5'

    // Databases
    runtime('org.postgresql:postgresql:42.1.4')
    implementation group: 'com.rethinkdb', name: 'rethinkdb-driver', version: '2.3.3'

    // Lint
    ktlint "com.github.shyiko:ktlint:0.23.1"

    // Tests dependencies
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.0.5.RELEASE'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.1'
    testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
    testImplementation 'com.willowtreeapps.assertk:assertk:0.10'
    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:$spring_boot_version"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:$spring_boot_version"
    testImplementation('com.h2database:h2')
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

test {
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}