group 'com.zcorp'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.40'
    ext.spring_boot_version = '2.0.1.RELEASE'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-jpa'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

configurations {
    ktlint
}

dependencies {
    ktlint "com.github.shyiko:ktlint:0.23.1"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.0.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation("org.springframework.boot:spring-boot-starter-data-rest")
    implementation('org.springframework.boot:spring-boot-devtools')

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // JWT
    implementation("io.jsonwebtoken:jjwt:0.9.0")

    // Jackson Dependencies
    implementation "com.fasterxml.jackson.core:jackson-annotations"
    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    runtime "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"
    runtime "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

    // Databases
    implementation("com.h2database:h2")
    runtime('org.postgresql:postgresql:42.1.4')
    implementation group: 'com.rethinkdb', name: 'rethinkdb-driver', version: '2.3.3'

    // Tests dependencies
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.0.5.RELEASE'
    testImplementation group: 'junit', name: 'junit', version: '4.11'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.1.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}